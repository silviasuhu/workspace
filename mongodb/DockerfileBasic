FROM ubuntu:22.04

RUN apt update \
    && apt install -y \
    sudo \
    python3 \
    git \
    vim \
    libxml2-dev \
    libssl-dev \
    libcurl3-dev \
    libkrb5-dev \
    libsasl2-dev \
    libldap-dev \
    python3.10-venv \
    wget \
    curl \
    fzf \
    jq \
    bat \
    openssh-client \
    tmux \
    curl \
    wget \
    unzip \
    build-essential \
    python3-pip \
    gh

RUN pip3 install \
    python-dateutil \
    psutil \
    pymongo \
    packaging \
    mtools # mlaunch is included in mtools

RUN useradd \
    -rm \
    -d /home/ubuntu \
    -s /bin/bash \
    -g root \
    -G sudo \
    -u 1001 ubuntu
RUN passwd -d ubuntu
USER ubuntu
WORKDIR /home/ubuntu
ENV USER=ubuntu

RUN mkdir -p /home/ubuntu/.local/bin
ENV PATH=$PATH:/home/ubuntu/.local/bin

RUN mkdir -p -m 700 /home/ubuntu/.ssh \
    && ssh-keyscan github.com >> /home/ubuntu/.ssh/known_hosts

##  Install mongodbtoolchain
RUN curl -o toolchain_installer.sh http://mongodbtoolchain.build.10gen.cc/installer.sh \
    && chmod +x toolchain_installer.sh \
    && ./toolchain_installer.sh \
    && rm toolchain_installer.sh
# # ENV PATH=$PATH:/opt/mongodbtoolchain/v5/bin/

# Install evergreen CLI
RUN curl -o evergreen https://evg-bucket-evergreen.s3.amazonaws.com/evergreen/clients/evergreen_f6e1a5ddfbff29d906215facbe34f4c5f6e9d69f/linux_amd64/evergreen \
    && chmod +x evergreen \
    && sudo mv evergreen /usr/local/bin/evergreen \
    && echo '# check https://spruce.mongodb.com/preferences/cli for your credentials' >> /home/ubuntu/.evergreen.yml \
    && echo 'user: "<<your username>>"' >> /home/ubuntu/.evergreen.yml \
    && echo 'api_key: "<<your api key>>"' >> /home/ubuntu/.evergreen.yml \
    && echo 'api_server_host: "https://evergreen.mongodb.com/api"' >> /home/ubuntu/.evergreen.yml \
    && echo 'ui_server_host: "https://evergreen.mongodb.com"' >> /home/ubuntu/.evergreen.yml

# Install oh-my-posh
RUN curl -s https://ohmyposh.dev/install.sh | bash -s
# RUN /home/ubuntu/.local/bin/oh-my-posh font install meslo

# Install diff-so-fancy
RUN git clone https://github.com/so-fancy/diff-so-fancy.git /home/ubuntu/.diff-so-fancy \
    && chmod +x /home/ubuntu/.diff-so-fancy/diff-so-fancy \
    && sudo ln -s /home/ubuntu/.diff-so-fancy/diff-so-fancy /usr/local/bin/.

# Setup tmux
RUN mkdir -p $HOME/.tmux/plugins \
    && git clone https://github.com/tmux-plugins/tpm.git /home/ubuntu/.tmux/plugins/tpm

# Install mrlog
RUN curl https://sh.rustup.rs -sSf | bash -s -- -y \
    && git clone https://github.com/markbenvenuto/mrlog.git /home/ubuntu/.mrlog \
    && cd /home/ubuntu/.mrlog \
    && . /home/ubuntu/.cargo/env \
    && /home/ubuntu/.cargo/bin/cargo build --release \
    && ln -s /home/ubuntu/.mrlog/target/release/mrlog /home/ubuntu/.local/bin/mrlog \
    && cd /home/ubuntu

# Install mongo shell
RUN wget https://downloads.mongodb.com/compass/mongosh-2.5.3-linux-arm64.tgz \
    && tar -xzf mongosh-2.5.3-linux-arm64.tgz \
    && mv mongosh-2.5.3-linux-arm64/bin/mongosh /home/ubuntu/.local/bin/mongosh \
    && rm -rf mongosh-2.5.3-linux-arm64* \
    && sudo chmod +x /home/ubuntu/.local/bin/mongosh

# Install MongoDB Command Line Tools
RUN wget https://fastdl.mongodb.org/tools/db/mongodb-database-tools-amazon2-aarch64-100.12.2.tgz \
    && tar -xzf mongodb-database-tools-amazon2-aarch64-100.12.2.tgz \
    && mv mongodb-database-tools-amazon2-aarch64-100.12.2/bin/* /home/ubuntu/.local/bin/ \
    && rm -rf mongodb-database-tools-amazon2-aarch64-100.12.2* \
    && chmod +x /home/ubuntu/.local/bin/*

# Install m
RUN wget https://raw.githubusercontent.com/aheckmann/m/master/bin/m \
    && mv ./m /home/ubuntu/.local/bin/m \
    && chmod +x /home/ubuntu/.local/bin/m

# Install asdf, which is required by mtools
RUN git clone https://github.com/asdf-vm/asdf.git /home/ubuntu/.asdf

# Install forgit
RUN git clone https://github.com/wfxr/forgit.git /home/ubuntu/.forgit

# Install task-spooler
RUN git clone https://github.com/justanhduc/task-spooler.git /home/ubuntu/.task-spooler \
    && cd /home/ubuntu/.task-spooler \
    && make cpu \
    && sudo make install \
    && cd /home/ubuntu

RUN sudo sysctl -w kernel.core_pattern=dump_%e.%p.core