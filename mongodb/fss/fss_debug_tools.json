{
    "args": {},
    "pre_checks": {},
    "commands": {
        "debLaptop_enable_access_to_new_spawned_host": {
            "description": "Enable connection to an spawned host from the laptop",
            "cmd": "sudo sh -c \"echo '#Temporal spawned host:' >> /etc/ppp/ip-up;echo '/sbin/route add -host <<hostname>> -interface ppp0' >> /etc/ppp/ip-up\"; echo 'ssh <<username>>@<<hostname>>' > sshSpawnedHost.sh; chmod +x sshSpawnedHost.sh; echo 'scp <<username>>@<<hostname>>:/home/ec2-user/debug/gdb.txt .' > scpGdbTxt.sh; chmod +x scpGdbTxt.sh; echo 'Remember to restart the VPN connection'",
            "bell": false,
            "pre_checks": [],
            "parameters": {
                "hostname": {
                    "type": "input",
                    "description": "Url to access the spawned host",
                    "default": ""
                },
                "username": {
                    "type": "input",
                    "description": "Username to access the spawned host",
                    "default": "ec2-user"
                }
            }
        },
        "debLaptop_gdb_stacktraces_to_html": {
            "description": "Convert gdb stacktraces to html",
            "cmd": "python /Users/silvia/projects/t2-0.18.12/scripts/gdb2stacks.py < <<gdb_stacktraces_file>> | python3 /Users/silvia/projects/t2-0.18.12/scripts/calltree.py > <<gdb_stacktraces_file>>.html",
            "bell": false,
            "pre_checks": [],
            "parameters": {
                "gdb_stacktraces_file": {
                    "type": "query",
                    "description": "File with stacktraces",
                    "query_cmd": "ls",
                    "default": "gdb.txt"
                }
            }
        },
        "debLaptop_mongod_run_locally": {
            "description": "Run mongod on the current directory",
            "cmd": "m <<version>> && mongod --dbpath . --setParameter recoverFromOplogAsStandalone=true --port <<port>>",
            "bell": false,
            "pre_checks": [],
            "parameters": {
                "port": {
                    "type": "input",
                    "description": "Port number",
                    "default": "27017"
                },
                "version": {
                    "type": "query",
                    "description": "mongod version",
                    "query_cmd": "m",
                    "default": ""
                }
            }
        },
        "debWs_create_testslog_link_into_home": {
            "description": "Create a symbolic link into home to the tests.log of the current dir.",
            "cmd": "rm $HOME/tests.log;ln -s $(pwd)/tests.log $HOME/tests.log",
            "bell": false,
            "pre_checks": [],
            "parameters": {}
        },
        "debLaptop_download_testslog_from_ws_and_open": {
            "description": "",
            "cmd": "scp devel-ws:~/tests.log .;open https://parsley.mongodb.com/upload;open .",
            "bell": false,
            "pre_checks": [],
            "parameters": {}
        }
    }
}
