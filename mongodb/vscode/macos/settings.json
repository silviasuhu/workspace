{
	"clangd.checkUpdates": true,
	"clangd.path": "/usr/bin/clangd",
	"clang-format.executable": "/opt/homebrew/opt/llvm@19/bin/clang-format",
	"clang-tidy.executable": "buildscripts/clang_tidy_vscode.py",
	"C_Cpp.intelliSenseEngine": "disabled",
	"C_Cpp.default.compileCommands": "${workspaceFolder}/compile_commands.json",
	"editor.codeActionsOnSave": {
		"source.fixAll.eslint": "explicit"
	},
	"eslint.validate": [
		"javascript"
	],
	"files.associations": {
		"*.idl": "yaml"
	},
	"files.insertFinalNewline": true,
	"js/ts.implicitProjectConfig.target": "ES2020",
	"python.defaultInterpreterPath": ".venv/bin/python",
	"mypy-type-checker.path": [
		"${interpreter}",
		"-m",
		"mypy"
	],
	"mypy-type-checker.importStrategy": "fromEnvironment",
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	"[c]": {
		"editor.defaultFormatter": "xaver.clang-format",
		"editor.formatOnSave": true,
	},
	"[cpp]": {
		"editor.defaultFormatter": "xaver.clang-format",
		"editor.formatOnSave": true,
	},
	"[javascript]": {
		"editor.defaultFormatter": "xaver.clang-format",
		"editor.formatOnSave": true,
	},
	"[python]": {
		"editor.formatOnSaveMode": "file",
		"editor.formatOnSave": true,
		"editor.defaultFormatter": "charliermarsh.ruff",
	},
	"[starlark]": {
		"editor.defaultFormatter": "BazelBuild.vscode-bazel"
	},
	// Allows clicking on a line to jump to location in a JS stacktrace like the example
	// following. Usually the '@' character is not recognized as a word boundary.
	// doassert@src/mongo/shell/assert.js:18:14
	"terminal.integrated.wordSeparators": " ()[]{}',\"`─‘’@",
	"yaml.schemas": {
		"./buildscripts/idl/idl_schema.yml": [
			"*.idl"
		],
	},
}