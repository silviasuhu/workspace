# unbind default prefix and set it to ctrl-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# enable mouse support for switching panes/windows
set -g mouse on
set -g history-limit 500000

# split window / create new panes (default shortcuts)
bind % split-window -h -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'

set -g default-terminal "${TERM}"
set -ga terminal-overrides ",${TERM}:Tc"

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf \; display ".tmux.conf reloaded!"

# add pane broadcast shortcuts
bind b setw synchronize-panes on
bind v setw synchronize-panes off

# move through windows
bind . next-window
bind , previous-window

# move through panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# kill pane/window (default shortcuts)
bind x kill-pane

# detach others except me
bind d detach-client -a

# new window (default shortcut)
bind c new-window\; send-keys 'fss -c mgoto' Enter

# enable copy-mode-vi
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
bind p paste-buffer

# enble doubleclick to select a word
bind -T copy-mode    DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi DoubleClick1Pane select-pane \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -n DoubleClick1Pane select-pane \; copy-mode -M \; send -X select-word \; send -X copy-pipe-no-clear "xsel -i --clipboard"

# enable tripleclick to select a line
bind -T copy-mode    TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -T copy-mode-vi TripleClick1Pane select-pane \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i --clipboard"
bind -n TripleClick1Pane select-pane \; copy-mode -M \; send -X select-line \; send -X copy-pipe-no-clear "xsel -i --clipboard"

# middleclick to paste
bind -n MouseDown2Pane run "tmux set-buffer -b primary_selection \"$(xsel -o)\"; tmux paste-buffer -b primary_selection; tmux delete-buffer -b primary_selection"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'wfxr/tmux-power'
#set -g @plugin 'thewtex/tmux-mem-cpu-load'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

set -g @tmux_power_theme 'coral'

if-shell '[[ -z $TERM_MAIN_COLOR ]]' {
    TMUX_MAIN_COLOR="#ff7f50"
} {
    TMUX_MAIN_COLOR=$TERM_MAIN_COLOR
}

# Define status bar
TMUX_STATUS_BAR_BACKGROUND_COLOR="#253B51"
set -g status-position bottom
set -g status on
set -g status-bg "$TMUX_STATUS_BAR_BACKGROUND_COLOR"
set -g status-fg "#9EB0C3"
set -g window-status-current-format "#[fg=$TMUX_MAIN_COLOR,bold] #I:#(basename #{pane_current_path})#F "
set -g window-status-format " #I:#(basename #{pane_current_path})#F "
set -g window-status-bell-style fg=colour3
set -g status-interval 1
set -g status-justify centre
set -g status-left "#[fg=#{status-bg},bg=$TMUX_MAIN_COLOR,bold] #S #[fg=$TMUX_MAIN_COLOR,bg=#{status-bg}]"
set -g status-right "#[fg=$TMUX_MAIN_COLOR,bg=#{status-bg}]#[fg=#{status-bg},bg=$TMUX_MAIN_COLOR] #(tmux-mem-cpu-load -i 2)"
set -g status-left-length 150
set -g status-right-length 150
set -g monitor-activity off

# Defin pane borders
TMUX_PANE_BACKGROUND="#222222"
set -g pane-border-style bg="$TMUX_PANE_BACKGROUND",fg="$TMUX_MAIN_COLOR"
set -g pane-active-border-style bg="$TMUX_PANE_BACKGROUND",fg="$TMUX_MAIN_COLOR"
set -g pane-border-format "#{?pane_active,#[fg=#9EB0C3]$USER:#[fg=$TMUX_MAIN_COLOR] #{pane_current_path} #{?#(cd #{pane_current_path};git rev-parse --is-inside-work-tree),- git( #(cd #{pane_current_path};git rev-parse --abbrev-ref HEAD) ),─},#[fg=#9EB0C3]$USER: #{pane_current_path} #{?#(cd #{pane_current_path};git rev-parse --is-inside-work-tree),- git( #(cd #{pane_current_path};git rev-parse --abbrev-ref HEAD) ),─}}"
set -g pane-border-status top
